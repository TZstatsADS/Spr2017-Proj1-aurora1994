library("topicmodels")
library("NLP")
library("openNLP")
library("openNLPmodels.en")
source("../lib/speechFuncs.R")
source("../lib/sentTagFunc.R")
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
inaug=f.speechlinks(main.page)
#Check and install needed packages. Load the libraries and functions.
packages.used=c("rvest", "tibble", "qdap",
"sentimentr", "gplots", "dplyr",
"tm", "syuzhet", "beeswarm", "scales",
"RColorBrewer","RANN", "topicmodels",
"NLP", "openNLP", "ggplot2", "tidyr")
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
#install.packages("http://datacube.wu.ac.at/src/contrib/openNLPmodels.en_1.5-1.tar.gz",
#                  repos=NULL, type="source")
options(java.parameters = "- Xmx8g")
#library("rvest")
#library("tibble")
library("qdap")
#library("sentimentr")
#library("gplots")
#library("dplyr")
library("tm")
library("syuzhet")
library("beeswarm")
library("scales")
library("RColorBrewer")
library("RANN")
library("tm")
library("topicmodels")
library("NLP")
library("openNLP")
library("openNLPmodels.en")
source("../lib/speechFuncs.R")
source("../lib/sentTagFunc.R")
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
inaug=f.speechlinks(main.page)
?html_nodes
??html_nodes
#Check and install needed packages. Load the libraries and functions.
packages.used=c("rvest", "tibble", "qdap",
"sentimentr", "gplots", "dplyr",
"tm", "syuzhet", "beeswarm", "scales",
"RColorBrewer","RANN", "topicmodels",
"NLP", "openNLP", "ggplot2", "tidyr")
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
#install.packages("http://datacube.wu.ac.at/src/contrib/openNLPmodels.en_1.5-1.tar.gz",
#                  repos=NULL, type="source")
options(java.parameters = "- Xmx8g")
library("rvest")
#library("tibble")
library("qdap")
#library("sentimentr")
#library("gplots")
#library("dplyr")
library("tm")
library("syuzhet")
library("beeswarm")
library("scales")
library("RColorBrewer")
library("RANN")
library("tm")
library("topicmodels")
library("NLP")
library("openNLP")
library("openNLPmodels.en")
source("../lib/speechFuncs.R")
source("../lib/sentTagFunc.R")
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
inaug=f.speechlinks(main.page)
inaug=inaug[-nrow(inaug),]
inaug.list=read.csv("../data/inauglist.csv", stringsAsFactors = FALSE)
inaug.list=cbind(inaug.list, inaug)
inaug.list$fulltext=NA
for(i in seq(nrow(inaug.list))) {
text <- read_html(inaug.list$urls[i]) %>% # load the page
html_nodes(".displaytext") %>%
html_text()
inaug.list$fulltext[i]=text
filename <- paste0("../data/fulltext/",
inaug.list$type[i],
inaug.list$File[i], "-",
inaug.list$Term[i], ".txt")
sink(file = filename) %>%
cat(text)
sink()
}
if("ggplot2" %in% (.packages())){
detach("package:ggplot2", unload=TRUE)
}
#Check and install needed packages. Load the libraries and functions.
packages.used=c("rvest", "tibble", "qdap",
"sentimentr", "gplots", "dplyr",
"tm", "syuzhet", "beeswarm", "scales",
"RColorBrewer","RANN", "topicmodels",
"NLP", "openNLP", "ggplot2", "tidyr")
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
#install.packages("http://datacube.wu.ac.at/src/contrib/openNLPmodels.en_1.5-1.tar.gz",
#                  repos=NULL, type="source")
options(java.parameters = "- Xmx8g")
library("rvest")
library("tibble")
library("qdap")
#library("sentimentr")
#library("gplots")
#library("dplyr")
library("tm")
library("syuzhet")
library("beeswarm")
library("scales")
library("RColorBrewer")
library("RANN")
library("tm")
library("topicmodels")
library("NLP")
library("openNLP")
library("openNLPmodels.en")
source("../lib/speechFuncs.R")
source("../lib/sentTagFunc.R")
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
inaug=f.speechlinks(main.page)
inaug=inaug[-nrow(inaug),]
inaug.list=read.csv("../data/inauglist.csv", stringsAsFactors = FALSE)
inaug.list=cbind(inaug.list, inaug)
inaug.list$fulltext=NA
for(i in seq(nrow(inaug.list))) {
text <- read_html(inaug.list$urls[i]) %>% # load the page
html_nodes(".displaytext") %>%
html_text()
inaug.list$fulltext[i]=text
filename <- paste0("../data/fulltext/",
inaug.list$type[i],
inaug.list$File[i], "-",
inaug.list$Term[i], ".txt")
sink(file = filename) %>%
cat(text)
sink()
}
if("ggplot2" %in% (.packages())){
detach("package:ggplot2", unload=TRUE)
}
#Check and install needed packages. Load the libraries and functions.
packages.used=c("rvest", "tibble", "qdap",
"sentimentr", "gplots", "dplyr",
"tm", "syuzhet", "beeswarm", "scales",
"RColorBrewer","RANN", "topicmodels",
"NLP", "openNLP", "ggplot2", "tidyr")
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
#install.packages("http://datacube.wu.ac.at/src/contrib/openNLPmodels.en_1.5-1.tar.gz",
#                  repos=NULL, type="source")
options(java.parameters = "- Xmx8g")
library("rvest")
library("tibble")
library("qdap")
#library("sentimentr")
#library("gplots")
library("dplyr")
library("tm")
library("syuzhet")
library("beeswarm")
library("scales")
library("RColorBrewer")
library("RANN")
library("tm")
library("topicmodels")
library("NLP")
library("openNLP")
library("openNLPmodels.en")
source("../lib/speechFuncs.R")
source("../lib/sentTagFunc.R")
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
inaug=f.speechlinks(main.page)
inaug=inaug[-nrow(inaug),]
inaug.list=read.csv("../data/inauglist.csv", stringsAsFactors = FALSE)
inaug.list=cbind(inaug.list, inaug)
inaug.list$fulltext=NA
for(i in seq(nrow(inaug.list))) {
text <- read_html(inaug.list$urls[i]) %>% # load the page
html_nodes(".displaytext") %>%
html_text()
inaug.list$fulltext[i]=text
filename <- paste0("../data/fulltext/",
inaug.list$type[i],
inaug.list$File[i], "-",
inaug.list$Term[i], ".txt")
sink(file = filename) %>%
cat(text)
sink()
}
if("ggplot2" %in% (.packages())){
detach("package:ggplot2", unload=TRUE)
}
#Check and install needed packages. Load the libraries and functions.
packages.used=c("rvest", "tibble", "qdap",
"sentimentr", "gplots", "dplyr",
"tm", "syuzhet", "beeswarm", "scales",
"RColorBrewer","RANN", "topicmodels",
"NLP", "openNLP", "ggplot2", "tidyr")
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
#install.packages("http://datacube.wu.ac.at/src/contrib/openNLPmodels.en_1.5-1.tar.gz",
#                  repos=NULL, type="source")
options(java.parameters = "- Xmx8g")
library("rvest")
library("tibble")
library("qdap")
library("sentimentr")
library("gplots")
library("dplyr")
library("tm")
library("syuzhet")
library("beeswarm")
library("scales")
library("RColorBrewer")
library("RANN")
library("tm")
library("topicmodels")
library("NLP")
library("openNLP")
library("openNLPmodels.en")
source("../lib/speechFuncs.R")
source("../lib/sentTagFunc.R")
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
inaug=f.speechlinks(main.page)
inaug=inaug[-nrow(inaug),]
inaug.list=read.csv("../data/inauglist.csv", stringsAsFactors = FALSE)
inaug.list=cbind(inaug.list, inaug)
inaug.list$fulltext=NA
for(i in seq(nrow(inaug.list))) {
text <- read_html(inaug.list$urls[i]) %>% # load the page
html_nodes(".displaytext") %>%
html_text()
inaug.list$fulltext[i]=text
filename <- paste0("../data/fulltext/",
inaug.list$type[i],
inaug.list$File[i], "-",
inaug.list$Term[i], ".txt")
sink(file = filename) %>%
cat(text)
sink()
}
if("ggplot2" %in% (.packages())){
detach("package:ggplot2", unload=TRUE)
}
?object.size
library("gdata", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
#Check and install needed packages. Load the libraries and functions.
packages.used=c("rvest", "tibble", "qdap",
"sentimentr", "gplots", "dplyr",
"tm", "syuzhet", "beeswarm", "scales",
"RColorBrewer","RANN", "topicmodels",
"NLP", "openNLP", "ggplot2", "tidyr")
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
#install.packages("http://datacube.wu.ac.at/src/contrib/openNLPmodels.en_1.5-1.tar.gz",
#                  repos=NULL, type="source")
options(java.parameters = "- Xmx8g")
library("rvest")
library("tibble")
library("qdap")
library("sentimentr")
library("gplots")
library("dplyr")
library("tm")
library("syuzhet")
library("beeswarm")
library("scales")
library("RColorBrewer")
library("RANN")
library("tm")
library("topicmodels")
library("NLP")
library("openNLP")
library("openNLPmodels.en")
source("../lib/speechFuncs.R")
source("../lib/sentTagFunc.R")
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
inaug=f.speechlinks(main.page)
inaug=inaug[-nrow(inaug),]
inaug.list=read.csv("../data/inauglist.csv", stringsAsFactors = FALSE)
inaug.list=cbind(inaug.list, inaug)
inaug.list$fulltext=NA
for(i in seq(nrow(inaug.list))) {
text <- read_html(inaug.list$urls[i]) %>% # load the page
html_nodes(".displaytext") %>%
html_text()
inaug.list$fulltext[i]=text
filename <- paste0("../data/fulltext/",
inaug.list$type[i],
inaug.list$File[i], "-",
inaug.list$Term[i], ".txt")
sink(file = filename) %>%
cat(text)
sink()
}
if("ggplot2" %in% (.packages())){
detach("package:ggplot2", unload=TRUE)
}
library(gdata)
#Check and install needed packages. Load the libraries and functions.
packages.used=c("rvest", "tibble", "qdap",
"sentimentr", "gplots", "dplyr",
"tm", "syuzhet", "beeswarm", "scales",
"RColorBrewer","RANN", "topicmodels",
"NLP", "openNLP", "ggplot2", "tidyr")
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
#install.packages("http://datacube.wu.ac.at/src/contrib/openNLPmodels.en_1.5-1.tar.gz",
#                  repos=NULL, type="source")
options(java.parameters = "- Xmx8g")
library("rvest")
library("tibble")
library("qdap")
library("sentimentr")
library("gplots")
library("dplyr")
library("tm")
library("syuzhet")
library("beeswarm")
library("scales")
library("RColorBrewer")
library("RANN")
library("tm")
library("topicmodels")
library("NLP")
library("openNLP")
library("openNLPmodels.en")
source("../lib/speechFuncs.R")
source("../lib/sentTagFunc.R")
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
inaug=f.speechlinks(main.page)
inaug=inaug[-nrow(inaug),]
inaug.list=read.csv("../data/inauglist.csv", stringsAsFactors = FALSE)
inaug.list=cbind(inaug.list, inaug)
inaug.list$fulltext=NA
for(i in seq(nrow(inaug.list))) {
text <- read_html(inaug.list$urls[i]) %>% # load the page
html_nodes(".displaytext") %>%
html_text()
inaug.list$fulltext[i]=text
filename <- paste0("../data/fulltext/",
inaug.list$type[i],
inaug.list$File[i], "-",
inaug.list$Term[i], ".txt")
sink(file = filename) %>%
cat(text)
sink()
}
if("ggplot2" %in% (.packages())){
detach("package:ggplot2", unload=TRUE)
}
# Check and install needed packages. Load the libraries and functions.
packages.used=c("rvest", "tibble", "qdap",
"gplots", "dplyr","tm", "syuzhet",
"beeswarm", "scales", "RColorBrewer",
"NLP", "openNLP", "ggplot2", "tidyr","openNLPmodels.en")
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
packages.needed=setdiff("openNLPmodels.en",
intersect(installed.packages()[,1],
"openNLPmodels.en"))
if(length(packages.needed)>0){
install.packages("http://datacube.wu.ac.at/src/contrib/openNLPmodels.en_1.5-1.tar.gz",
repos=NULL, type="source")
}
options(java.parameters = "- Xmx8g")
library("rvest")
library("tibble")
library("qdap")
library("gplots")
library("dplyr")
library("tm")
library("syuzhet")
library("beeswarm")
library("scales")
library("RColorBrewer")
library("tm")
library("NLP")
library("openNLP")
library("openNLPmodels.en")
# A function assigns tense to each sentence in the text based on tense principle.
source("../lib/sentTagFunc.R")
source("../lib/speechFuncs.R")
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
inaug=f.speechlinks(main.page)
inaug=inaug[-nrow(inaug),]
inaug.list=read.csv("../data/inauglist.csv", stringsAsFactors = FALSE)
inaug.list=cbind(inaug.list, inaug)
inaug.list$fulltext=NA
for(i in seq(nrow(inaug.list))) {
text <- read_html(inaug.list$urls[i]) %>%
html_nodes(".displaytext") %>%
html_text()
inaug.list$fulltext[i]=text
filename <- paste0("../data/fulltext/",
inaug.list$type[i],
inaug.list$File[i], "-",
inaug.list$Term[i], ".txt")
sink(file = filename) %>%
cat(text)
sink()
}
if("ggplot2" %in% (.packages())){
detach("package:ggplot2", unload=TRUE)
}
# load a prepared RData
load("../output/Project1.RData")
table(sentence.list$tense)
head(sentence.list$sentences[sentence.list$tense=="Undefined"])
sentence.list$File=factor(sentence.list$File)
sentence.list$FileOrdered=reorder(sentence.list$File,
sentence.list$sent.id,
max,
order=T)
par(mar=c(4, 11, 2, 2))
# Assign color to each tense
Tense<-c("Simple Past", "Past Continuous", "Past Perfect", "Past Perfect Continuous", "Simple Present", "Present Continuous", "Present Perfect", "Present Perfect Continuous", "Simple Future","Future Continuous","Future Perfect","Undefined")
MyColors<-c("deepskyblue","dodgerblue", "blue","navy","maroon1","magenta","orchid", "purple","yellow","orange","orangered", "grey")
tenseColor<-factor(sentence.list$tense, levels = Tense, labels = MyColors)
# Beeswarm Plot to show the changes of tense during their inauguration.
beeswarm(sent.id~FileOrdered,
data=sentence.list,
horizontal = TRUE,
pch=16, pwcol=as.character(tenseColor),
cex=1, cex.axis=1, cex.lab=1,
spacing=5/nlevels(sentence.list$FileOrdered),
las=2, ylab="", xlab="Sentence ID",
main="Inaugural Speeches")
legend("bottomright", legend = Tense,
title = "Tense", pch = 16, cex=1, col = MyColors)
count<-table(sentence.list$tense,factor(sentence.list$President))
count<-prop.table(count,2)
count<-count[match(Tense,rownames(count)),]
par(mfrow=c(1, 1), mar=c(9, 2, 4, 5))
barplot(count, main="Percentage of Different Tenses", ylab="Percentage",
col=MyColors,bty='L',
las=2,cex.axis = 0.8, cex.names=0.8)
par(xpd=TRUE)
legend(48,1,legend = Tense,
title = "Tense", cex=0.8, fill = MyColors)
library(ggplot2)
library(tidyr)
# Merge the sub-tenses into main tenses and calculate the mean emotion scores for each main tenses.
past<-sentence.list[sentence.list$tense=="Simple Past"|sentence.list$tense=="Past Perfect"|sentence.list$tense=="Past Continuous"|sentence.list$tense=="Past Perfect Continuous",]
present<-sentence.list[sentence.list$tense=="Simple Present"|sentence.list$tense=="Present Perfect"|sentence.list$tense=="Present Continuous"|sentence.list$tense=="Present Perfect Continuous",]
future<-sentence.list[sentence.list$tense=="Simple Future"|sentence.list$tense=="Future Perfect"|sentence.list$tense=="Future Continuous"|sentence.list$tense=="Future Perfect Continuous",]
past.emo<-sapply(past[,12:21],mean)
present.emo<-sapply(present[,12:21],mean)
future.emo<-sapply(future[,12:21],mean)
time.emo<-cbind(rep(1:10,3),c(past.emo,present.emo,future.emo),c(rep("Past",10),rep("Present",10),rep("Future",10)))
colnames(time.emo)<-c("ID","Score","Tense")
rownames(time.emo)<-NULL
time.emo<-data.frame(time.emo)
time.emo$Score<-round(as.numeric(as.character(time.emo$Score)),2)
ggplot(data=time.emo)+ geom_point(aes(x=ID, y=Score,color=Tense, shape=Tense, size=1))+
scale_x_discrete(name="Emotion", breaks = seq(1,10,by=1),labels = as.character(names(past.emo)))+
labs(title="Comparison of Sentiments in Different Tense", y="Score")
past$President[past$President=="Grover Cleveland - I"|past$President=="Grover Cleveland - II"]<-"Grover Cleveland"
# Take out the 2-term presidents and calculate the mean emotion score for each term.
twoTermList<-as.character(levels(factor(past$President[past$Term==2])))
twoTerm<-NULL
for(i in 1:length(twoTermList)){
twoTerm<-rbind(twoTerm, past[past$President==twoTermList[i],])
}
Term1<-sapply(twoTerm[twoTerm$Term==1,12:21],mean)
Term2<-sapply(twoTerm[twoTerm$Term==2,12:21],mean)
Term<-cbind(rep(1:10,2),c(Term1,Term2),c(rep("Term1",10),rep("Term2",10)))
colnames(Term)<-c("ID","Score","No.Term")
rownames(Term)<-NULL
Term<-data.frame(Term)
Term$Score<-round(as.numeric(as.character(Term$Score)),2)
ggplot(data=Term)+ geom_point(aes(x=ID, y=Score, color=No.Term, shape=No.Term, size=1))+
scale_x_discrete(name="Emotion", breaks = seq(1,10,by=1),labels = as.character(names(Term1)))+
labs(title="Comparison of Sentiments in Different Terms", y="Score")
